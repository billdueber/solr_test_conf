<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config [
<!ENTITY spstemmer "solr.SnowballPorterFilterFactory">
<!ENTITY kstemmer "solr.KStemFilterFactory">
<!ENTITY stemmer "&spstemmer;">
<!ENTITY char_expansion_file "token_fixing_charfilter.txt">
<!ENTITY synonym_file "syn.txt">
<!ENTITY tpig "1000">
<!ENTITY min_num_length "8">
<!ENTITY mnl_minus_two "6">
<!ENTITY max_num_length "14">
<!ENTITY explicit_field_defs SYSTEM "schema/explicit_fields.xml">
<!ENTITY dynamic_field_defs SYSTEM "schema/dynamic_fields.xml">
<!ENTITY field_types SYSTEM "schema/field_types.xml">
]>
<schema name="example" version="1.5">
  <uniqueKey>id</uniqueKey>
  <field name="_root_" type="string" stored="false" indexed="true"/>
  <field name="author_sort" type="exactish" stored="true" indexed="true" sortMissingLast="true"/>
  <field name="billname" type="text"/>
  <field name="ht_count" type="int" stored="true" indexed="true"/>
  <field name="ht_json" type="string" stored="true" indexed="false"/>
  <field name="id" type="string" stored="true" indexed="true"/>
  <field name="pub_date" type="int" stored="true" indexed="true"/>
  <field name="str_test" type="str" stored="false"/>
  <field name="title_display" type="string" stored="true" indexed="false"/>
  <field name="title_sort" type="exactish" stored="false" indexed="true" sortMissingLast="true"/>
  <field name="name" type="text_general"/>
  <dynamicField name="*_tmax_s" type="ignored" stored="false" indexed="false" multiValued="true"/>
  <dynamicField name="*_piped" type="string" stored="true" indexed="true" multiValued="true"/>
  <dynamicField name="*_st_s" type="ignored" stored="false" indexed="false" multiValued="true"/>
  <dynamicField name="*_tl_s" type="ignored" stored="false" indexed="false" multiValued="true"/>
  <dynamicField name="*_tp_s" type="ignored" stored="false" indexed="false" multiValued="true"/>
  <dynamicField name="*_tmax" type="ignored" stored="false" indexed="false" multiValued="true"/>
  <dynamicField name="*_se_s" type="ignored" stored="false" indexed="false" multiValued="true"/>
  <dynamicField name="*_pp_s" type="ignored" stored="false" indexed="false" multiValued="true"/>
  <dynamicField name="*_bool" type="boolean" stored="true" indexed="true" multiValued="false"/>
  <dynamicField name="*_t_s" type="ignored" stored="false" indexed="false" multiValued="true"/>
  <dynamicField name="*_e_s" type="ignored" stored="false" indexed="false" multiValued="true"/>
  <dynamicField name="*_n_s" type="ignored" stored="false" indexed="false" multiValued="true"/>
  <dynamicField name="*_i_s" type="ignored" stored="false" indexed="false" multiValued="true"/>
  <dynamicField name="*_s_s" type="ignored" stored="false" indexed="false" multiValued="true"/>
  <dynamicField name="*_tp" type="text_proper" stored="false" indexed="true" multiValued="true"/>
  <dynamicField name="*_tl" type="text_l" stored="false" indexed="true" multiValued="true"/>
  <dynamicField name="*_pp" type="piped_path" stored="false" indexed="true" multiValued="true"/>
  <dynamicField name="*_s" type="string" stored="false" indexed="true" multiValued="true" sortMissingLast="true"/>
  <dynamicField name="*_t" type="text" stored="false" indexed="true" multiValued="true"/>
  <dynamicField name="*_n" type="numericID" stored="false" indexed="true" multiValued="true"/>
  <dynamicField name="*_i" type="int" stored="false" indexed="true" multiValued="true"/>
  <dynamicField name="*_e" type="exactish" stored="false" indexed="true" multiValued="true" sortMissingLast="true"/>
  <dynamicField name="*" type="string" stored="true" indexed="false" multiValued="true"/>
  <copyField source="*_t_s" dest="*_t"/>
  <copyField source="*_t_s" dest="*"/>
  <copyField source="*_st_s" dest="*_t"/>
  <copyField source="*_st_s" dest="*_s"/>
  <copyField source="*_st_s" dest="*"/>
  <copyField source="*_tl_s" dest="*_tl"/>
  <copyField source="*_tl_s" dest="*_t"/>
  <copyField source="*_tl_s" dest="*"/>
  <copyField source="*_tp_s" dest="*_tp"/>
  <copyField source="*_tp_s" dest="*_t"/>
  <copyField source="*_tp_s" dest="*"/>
  <copyField source="*_tmax_s" dest="*_tp"/>
  <copyField source="*_tmax_s" dest="*_tl"/>
  <copyField source="*_tmax_s" dest="*_t"/>
  <copyField source="*_tmax_s" dest="*"/>
  <copyField source="*_tmax" dest="*_tp"/>
  <copyField source="*_tmax" dest="*_tl"/>
  <copyField source="*_tmax" dest="*_t"/>
  <copyField source="*_e_s" dest="*_e"/>
  <copyField source="*_e_s" dest="*"/>
  <copyField source="*_se_s" dest="*_e"/>
  <copyField source="*_se_s" dest="*_s"/>
  <copyField source="*_se_s" dest="*"/>
  <copyField source="*_n_s" dest="*_n"/>
  <copyField source="*_n_s" dest="*"/>
  <copyField source="*_i_s" dest="*_i"/>
  <copyField source="*_i_s" dest="*"/>
  <copyField source="*_s_s" dest="*_s"/>
  <copyField source="*_s_s" dest="*"/>
  <copyField source="*_pp_s" dest="*_pp"/>
  <copyField source="*_pp_s" dest="*_piped"/>
  <fieldType class="solr.TextField" name="alphaOnlySort" sortMissingLast="true">
        <analyzer>
            <!-- KeywordTokenizer does no actual tokenizing, so the entire
                 input string is preserved as a single token
              -->
            <tokenizer class="solr.KeywordTokenizerFactory"/>
            <!-- The LowerCase TokenFilter does what you expect, which can be
                 when you want your sorting to be case insensitive
              -->
            <filter class="solr.LowerCaseFilterFactory"/>
            <!-- The TrimFilter removes any leading or trailing whitespace -->
            <filter class="solr.TrimFilterFactory"/>
            <!-- The PatternReplaceFilter gives you the flexibility to use
                 Java Regular expression to replace any sequence of characters
                 matching a pattern with an arbitrary replacement string,
                 which may include back references to portions of the original
                 string matched by the pattern.

                 See the Java Regular Expression documentation for more
                 information on pattern and replacement string syntax.

                 http://docs.oracle.com/javase/7/docs/api/java/util/regex/package-summary.html
              -->
            <filter class="solr.PatternReplaceFilterFactory" pattern="([^a-z])" replacement="" replace="all"/>
        </analyzer>
    </fieldType>
  <fieldType class="solr.BinaryField" name="binary"/>
  <fieldType class="solr.BoolField" name="boolean" sortMissingLast="true"/>
  <fieldType class="solr.TrieDateField" name="date" precisionStep="0" positionIncrementGap="0"/>
  <fieldType class="solr.TrieDoubleField" name="double" precisionStep="0" positionIncrementGap="0"/>
  <fieldType class="solr.TextField" name="exactish" positionIncrementGap="1000">
        <analyzer>
              <charFilter class="solr.ICUNormalizer2CharFilterFactory"/>
            <charFilter class="solr.MappingCharFilterFactory" mapping="token_fixing_charfilter.txt"/>

            <tokenizer class="solr.KeywordTokenizerFactory"/>
            <filter class="solr.TrimFilterFactory"/>

            <!-- Anything punctuation that should be turned into a space (probably just - and :) needs
                 to do so here -->
            <filter class="solr.PatternReplaceFilterFactory" pattern="([:\-])" replacement=" " replace="all"/>
            <filter class="solr.PatternReplaceFilterFactory" pattern="([\p{Punct}])" replacement="" replace="all"/>
            <filter class="solr.ICUFoldingFilterFactory"/>
            <filter class="solr.CJKWidthFilterFactory"/>
            <filter class="solr.CJKBigramFilterFactory"/>

        </analyzer>
    </fieldType>
  <fieldType class="solr.TrieFloatField" name="float" precisionStep="0" positionIncrementGap="0"/>
  <fieldType class="solr.StrField" name="ignored" stored="false" indexed="false" multiValued="true"/>
  <fieldType class="solr.TrieIntField" name="int" precisionStep="0" positionIncrementGap="0"/>
  <fieldType class="solr.TrieLongField" name="long" precisionStep="0" positionIncrementGap="0"/>
  <fieldType class="solr.TextField" name="numericID" positionIncrementGap="50">
        <analyzer>
            <tokenizer class="solr.KeywordTokenizerFactory"/>
            <filter class="solr.TrimFilterFactory"/>
            <filter class="solr.PatternReplaceFilterFactory" pattern="^.*?(\p{N}[\p{N}\-\.]{6,}[xX]?).*$" replacement="***$1"/>
            <filter class="solr.PatternReplaceFilterFactory" pattern="^[^\*].*$" replacement=""/>
            <filter class="solr.PatternReplaceFilterFactory" pattern="^\*\*\*" replacement=""/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.PatternReplaceFilterFactory" pattern="[^\p{N}x]" replacement="" replace="all"/>
            <filter class="solr.LengthFilterFactory" min="8" max="14"/>
            <!--<filter class="solr.PatternReplaceFilterFactory" pattern="^0*" replacement=""/>-->
        </analyzer>
    </fieldType>
  <fieldType class="solr.TextField" name="piped_path">
        <analyzer type="index">
            <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="|"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.KeywordTokenizerFactory"/>
        </analyzer>
    </fieldType>
  <fieldType class="solr.StrField" name="str" stored="true" indexed="true"/>
  <fieldType class="solr.StrField" name="string" sortMissingLast="true"/>
  <fieldType class="solr.TrieDateField" name="tdate" precisionStep="6" positionIncrementGap="0"/>
  <fieldType class="solr.TrieDoubleField" name="tdouble" precisionStep="8" positionIncrementGap="0"/>
  <fieldType class="solr.TextField" name="text" positionIncrementGap="1000">
        <analyzer>
            <charFilter class="solr.ICUNormalizer2CharFilterFactory"/>
            <charFilter class="solr.MappingCharFilterFactory" mapping="token_fixing_charfilter.txt"/>
            <tokenizer class="solr.ICUTokenizerFactory"/>
            <filter class="solr.ICUFoldingFilterFactory"/>
            <filter class="solr.SynonymFilterFactory" synonyms="syn.txt" ignoreCase="true" expand="false"/>
            <filter class="solr.CJKWidthFilterFactory"/>
            <filter class="solr.CJKBigramFilterFactory"/>
            <filter class="solr.KeywordRepeatFilterFactory"/>
            <filter class="solr.SnowballPorterFilterFactory"/>
            <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
        </analyzer>
    </fieldType>
  <fieldType class="solr.TextField" name="text_general" positionIncrementGap="100">
  <analyzer type="index">
    <tokenizer class="solr.StandardTokenizerFactory"/>
    <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true"/>
    <!-- in this example, we will only use synonyms at query time
    <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
    -->
    <filter class="solr.LowerCaseFilterFactory"/>
  </analyzer>
  <analyzer type="query">
    <tokenizer class="solr.StandardTokenizerFactory"/>
    <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true"/>
    <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
    <filter class="solr.LowerCaseFilterFactory"/>
  </analyzer>
</fieldType>
  <fieldType class="solr.TextField" name="text_l" positionIncrementGap="1000">
        <analyzer>

            <!-- Normalize text -->
              <charFilter class="solr.ICUNormalizer2CharFilterFactory"/>

            <!-- Common replacements at the char level (e.g., c# -> csharp) -->
            <charFilter class="solr.MappingCharFilterFactory" mapping="token_fixing_charfilter.txt"/>

            <!-- Eliminate leading and trailing punctuation and add on a prefix -->
            <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="^\p{Punct}*(.*?)\p{Punct}*$" replacement="aaaaa$1"/>
            <tokenizer class="solr.ICUTokenizerFactory"/>
            <filter class="solr.SynonymFilterFactory" synonyms="syn.txt" ignoreCase="true" expand="false"/>
            <filter class="solr.CJKWidthFilterFactory"/>
            <filter class="solr.CJKBigramFilterFactory"/>
            <filter class="solr.KeywordRepeatFilterFactory"/>
            <filter class="solr.SnowballPorterFilterFactory"/>
            <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
        </analyzer>
    </fieldType>
  <fieldType class="solr.TextField" name="text_proper" positionIncrementGap="1000">
        <analyzer>
            <charFilter class="solr.ICUNormalizer2CharFilterFactory"/>
            <charFilter class="solr.MappingCharFilterFactory" mapping="token_fixing_charfilter.txt"/>
            <tokenizer class="solr.ICUTokenizerFactory"/>
            <filter class="solr.ICUFoldingFilterFactory"/>
            <filter class="solr.CJKWidthFilterFactory"/>
            <filter class="solr.CJKBigramFilterFactory"/>
            <filter class="solr.SynonymFilterFactory" synonyms="syn.txt" ignoreCase="true" expand="false"/>

        </analyzer>
    </fieldType>
  <fieldType class="solr.TrieFloatField" name="tfloat" precisionStep="8" positionIncrementGap="0"/>
  <fieldType class="solr.TrieIntField" name="tint" precisionStep="8" positionIncrementGap="0"/>
  <fieldType class="solr.TrieLongField" name="tlong" precisionStep="8" positionIncrementGap="0"/>
  
  
  
  
</schema>
